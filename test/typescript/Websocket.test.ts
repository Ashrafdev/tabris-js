let isString: string;
let isNumber: number;
let isEvent: Event;
let isCloseEvent: CloseEvent;
let isMessageEvent: MessageEvent;
let isVoid: void;
let protocol: string = '';
let protocols: string[] = [];
let url: string = '';
let binaryType: string = '';
let data: any = {};
let reason: string = '';
let useCapture: boolean = false;
let isOncloseFn: (this: WebSocket, ev: CloseEvent) => any;
let isOnerrorFn: (this: WebSocket, ev: Event) => any;
let isOnmessageFn: (this: WebSocket, ev: MessageEvent) => any;
let isOnopenFn: (this: WebSocket, ev: Event) => any;
let closeListener: (this: WebSocket, ev: CloseEvent) => any = function(this, ev) {};
let errorListener: (this: WebSocket, ev: Event) => any = function(this, ev) {};
let messageListener: (this: WebSocket, ev: MessageEvent) => any = function(this, ev) {};
let openListener: (this: WebSocket, ev: Event) => any = function(this, ev) {};
let webSocket: WebSocket;


webSocket = new WebSocket(url);
webSocket = new WebSocket(url, protocols);
webSocket = new WebSocket(url, protocol);
webSocket = WebSocket.prototype;
webSocket.binaryType = binaryType;
binaryType = webSocket.binaryType;
isNumber = webSocket.bufferedAmount;
isString = webSocket.extensions;
isOncloseFn = webSocket.onclose;
isOnerrorFn = webSocket.onerror;
isOnmessageFn = webSocket.onmessage;
isOnopenFn = webSocket.onopen;
isString = webSocket.protocol;
isNumber = webSocket.readyState;
isString = webSocket.url;
isVoid = webSocket.close();
isVoid = webSocket.close(data, reason);
isVoid = webSocket.send(data);
isNumber = webSocket.CLOSED;
isNumber = webSocket.CLOSING;
isNumber = webSocket.CONNECTING;
isNumber = webSocket.OPEN;
isNumber = WebSocket.CLOSED;
isNumber = WebSocket.CLOSING;
isNumber = WebSocket.CONNECTING;
isNumber = WebSocket.OPEN;
isVoid = webSocket.addEventListener('close', closeListener);
isVoid = webSocket.addEventListener('close', closeListener, useCapture);
isVoid = webSocket.addEventListener('error', errorListener);
isVoid = webSocket.addEventListener('error', errorListener, useCapture);
isVoid = webSocket.addEventListener('message', messageListener);
isVoid = webSocket.addEventListener('message', messageListener, useCapture);
isVoid = webSocket.addEventListener('open', openListener);
isVoid = webSocket.addEventListener('open', openListener, useCapture);

