{
  "type": "AlertDialog",
  "extends": "Popup",
  "constructor": {
    "access": "public",
    "parameters": [
      {
        "name": "properties",
        "type": "Properties<AlertDialog>",
        "optional": true,
        "description": "Sets all key-value pairs in the properties object as widget properties."
      }
    ]
  },
  "jsxChildren": "string|TextInput|Array<TextInput|string>",
  "description": "An `AlertDialog` represents a native dialog pop-up showing a message and up to three buttons.  Is automatically disposed when closed.",
  "properties": {
    "title": {
      "type": "string",
      "description": "The title of the dialog."
    },
    "message": {
      "type": "string",
      "jsxContentProperty": true,
      "description": "The message to display inside the dialog."
    },
    "textInputs": {
      "type": "TextInput[]",
      "jsxType": "TextInput",
      "jsxContentProperty": true,
      "description": "A list of `TextInput` widgets to be displayed alongside the `title` and `message`. The text values inserted by the user can be read in the dialogs `close` event from the respective `TextInputs`. Eg.: `dialog.on('close', (e) => e.target.textInputs[0].text)`"
    },
    "buttons": {
      "type": "{ok?: string, cancel?: string, neutral?: string}",
      "description": "An object with the texts of the buttons to display. There are up to three buttons: `ok`, `cancel` and `neutral`. If no text is given for a button it will not be displayed. Example: `{ok: 'Yes', cancel: 'No'}` shows 'Yes' and 'No', but no 'neutral' button."
    },
    "jsxProperties": {
      "const": true,
      "readonly": true,
      "ts_only": true,
      "type": "JsxPropertiesObject",
      "description": "When using JSX with TypeScript (`.tsx` files), the type of this property determines which JSX attributes are valid for this popup."
    },
    "[JSX.jsxFactory]": {
      "description": "This function is called by the framework to create JSX elements from the AlertDialog class.",
      "type": "JSX.JsxFactory",
      "const": true,
      "readonly": true,
      "ts_only": true
    }
  },
  "events": {
    "close": {
      "description": "Fired when the dialog was closed for any reason.",
      "parameters": {
        "button": {
          "description": "The type of button that was used to close the dialog. Can also be null, e.g. when the global back button was pressed.",
          "type": "'ok'|'cancel'|'neutral'|null"
        },
        "texts": {
          "description": "An array containing the corresponding `text` values of all `textInputs` elements.",
          "type": "string[]"
        }
      }
    },
    "closeOk": {
      "description": "Fired when the dialog was closed by pressing the 'ok' button."
    },
    "closeCancel": {
      "description": "Fired when the dialog was closed by pressing the 'cancel' button."
    },
    "closeNeutral": {
      "description": "Fired when the dialog was closed by pressing the 'neutral' button."
    }
  },
  "statics": {
    "methods": {
      "open": [
        {
          "parameters": [
            {
              "name": "alertDialog",
              "description": "The alert dialog to open",
              "type": "AlertDialog"
            }
          ],
          "description": "Makes the given alert dialog visible. Meant to be used with inline-JSX. In TypeScript it also casts the given JSX element from `any` to an actual AlertDialog.",
          "returns": "AlertDialog"
        },
        {
          "parameters": [
            {
              "name": "message",
              "description": "The message to display",
              "type": "string"
            }
          ],
          "description": "Creates and opens an alert dialog with one 'OK' button and the given message.",
          "returns": "AlertDialog"
        }
      ]
    }
  },
  "links": [
    {
      "title": "AlertDialog snippet",
      "path": "${GITHUB_BRANCH}/snippets/alertdialog.js"
    }
  ]
}
